{"version":3,"sources":["logo.svg","views/Counter/styles.js","views/Counter/index.js","containers/CounterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["MarginButton","styled","Button","margin","CounterView","handleIncrementClick","handleDecrementClick","handleResetClick","counterValue","variant","className","onClick","CounterContainer","props","state","bind","event","this","setState","Counter","React","Component","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,G,MAAA,IAA0B,kC,gECG5BA,EAAeC,YAAOC,IAAPD,CAAe,CACvCE,OAAQ,S,OCwCGC,MAzCf,YAKI,IAJAC,EAID,EAJCA,qBACAC,EAGD,EAHCA,qBACAC,EAED,EAFCA,iBACAC,EACD,EADCA,aAEA,OACI,gCACI,cAACR,EAAD,CACIS,QAAQ,YACRC,UAAU,yBACVC,QAASN,EAHb,uBAOA,cAACL,EAAD,CACIS,QAAQ,YACRC,UAAU,yBACVC,QAASL,EAHb,uBAOA,cAACN,EAAD,CACIS,QAAQ,YACRC,UAAU,qBACVC,QAASJ,EAHb,mBAOA,sBAAMG,UAAU,eAAhB,SAAgCF,QCY7BI,E,kDAxCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTN,aAAc,GAElB,EAAKH,qBAAuB,EAAKA,qBAAqBU,KAA1B,gBAC5B,EAAKT,qBAAuB,EAAKA,qBAAqBS,KAA1B,gBAC5B,EAAKR,iBAAmB,EAAKA,iBAAiBQ,KAAtB,gBAPT,E,wDAUnB,SAAqBC,GACjBC,KAAKC,UAAS,SAACJ,GAAD,MAAY,CACtBN,eAAgBM,EAAMN,mB,kCAI9B,SAAqBQ,GACjBC,KAAKC,UAAS,SAACJ,GAAD,MAAY,CACtBN,eAAgBM,EAAMN,mB,8BAI9B,SAAiBQ,GACbC,KAAKC,UAAS,iBAAO,CACjBV,aAAc,Q,oBAItB,WACI,OACI,cAACW,EAAD,CACId,qBAAsBY,KAAKZ,qBAC3BC,qBAAsBW,KAAKX,qBAC3BC,iBAAkBU,KAAKV,iBACvBC,aAAcS,KAAKH,MAAMN,mB,GAnCVY,IAAMC,WCuBtBC,MAtBf,WACI,OACI,qBAAKZ,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKa,IAAKC,EAAMd,UAAU,WAAWe,IAAI,SACzC,sCACS,8CADT,0BAGA,mBACIf,UAAU,WACVgB,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJR,yBAQA,cAAC,EAAD,UCRDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1a17f96.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { styled } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const MarginButton = styled(Button)({\r\n    margin: \"10px\",\r\n});\r\n","import { MarginButton } from \"./styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CounterView({\r\n    handleIncrementClick,\r\n    handleDecrementClick,\r\n    handleResetClick,\r\n    counterValue,\r\n}) {\r\n    return (\r\n        <div>\r\n            <MarginButton\r\n                variant=\"contained\"\r\n                className=\"button incrementButton\"\r\n                onClick={handleIncrementClick}\r\n            >\r\n                increment\r\n            </MarginButton>\r\n            <MarginButton\r\n                variant=\"contained\"\r\n                className=\"button decrementButton\"\r\n                onClick={handleDecrementClick}\r\n            >\r\n                decrement\r\n            </MarginButton>\r\n            <MarginButton\r\n                variant=\"contained\"\r\n                className=\"button resetButton\"\r\n                onClick={handleResetClick}\r\n            >\r\n                reset\r\n            </MarginButton>\r\n            <span className=\"CounterValue\">{counterValue}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nCounterView.propTypes = {\r\n    handleIncrementClick: PropTypes.func.isRequired,\r\n    handleDecrementClick: PropTypes.func.isRequired,\r\n    handleResetClick: PropTypes.func.isRequired,\r\n    counterValue: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CounterView;\r\n","import React, { Component } from \"react\";\r\nimport CounterView from \"../views/Counter/index\";\r\n\r\nclass CounterContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counterValue: 0,\r\n        };\r\n        this.handleIncrementClick = this.handleIncrementClick.bind(this);\r\n        this.handleDecrementClick = this.handleDecrementClick.bind(this);\r\n        this.handleResetClick = this.handleResetClick.bind(this);\r\n    }\r\n\r\n    handleIncrementClick(event) {\r\n        this.setState((state) => ({\r\n            counterValue: ++state.counterValue,\r\n        }));\r\n    }\r\n\r\n    handleDecrementClick(event) {\r\n        this.setState((state) => ({\r\n            counterValue: --state.counterValue,\r\n        }));\r\n    }\r\n\r\n    handleResetClick(event) {\r\n        this.setState(() => ({\r\n            counterValue: 0,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CounterView\r\n                handleIncrementClick={this.handleIncrementClick}\r\n                handleDecrementClick={this.handleDecrementClick}\r\n                handleResetClick={this.handleResetClick}\r\n                counterValue={this.state.counterValue}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterContainer;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Counter from \"./containers/CounterContainer\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                    Edit <code>src/App.js</code> and save to reload.\r\n                </p>\r\n                <a\r\n                    className=\"App-link\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Learn React\r\n                </a>\r\n                <Counter />\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}